apiVersion: leaderworkerset.x-k8s.io/v1
kind: LeaderWorkerSet
metadata:
  name: {{ .Name }}
  namespace: {{ .Namespace }}
  labels:
  {{- if .Labels }}
    {{- .Labels | yaml | nindent 4 }}
  {{- end }}
  annotations:
  {{- if .Annotations }}
    {{- .Annotations | yaml | nindent 4 }}
  {{- end }}
spec:
  {{- if .Replicas }}
  replicas: {{ .Replicas }}
  {{- end }}
  leaderWorkerTemplate:
    size: {{ .Values.multiNode.workers }}
    restartPolicy: RecreateGroupOnPodRestart
    leaderTemplate:
      metadata:
        labels:
          nim-llm-role: "leader"
          {{- if .Labels }}
            {{- .Labels | yaml | nindent 10 }}
          {{- end } }
        annotations:
          {{- if .Annotations }}
            {{- .Annotations | yaml | nindent 10 }}
          {{- end }}
      spec:
        securityContext:
          {{- toYaml .Values.podSecurityContext | nindent 10 }}
        containers:
          - name: nim-leader
            # this image is build with the Dockerfile under ./build
            image: {{ .Image }}
            env:
              - name: OMPI_MCA_orte_keep_fqdn_hostnames
                value: "true"
              - name: OMPI_MCA_plm_rsh_args
                value: "-o ConnectionAttempts=20"
              - name: VLLM_CONFIGURE_LOGGING
                value: "1"
              - name: TLLM_LOG_LEVEL
                value: {{ include "nim-llm.trtLLMLoggingLevel" . }}
              - name: VLLM_NVEXT_LOG_LEVEL
                value: {{ include "nim-llm.vllmNVEXTLogLevel" . }}
              - name: UVICORN_LOG_LEVEL
                value: {{ include "nim-llm.uvicornLogLevel" . }}
              {{- include "nim-llm.JSONLLoggingEnvVars" . | indent 14 }}
              - name: NIM_CACHE_PATH
                value: {{ .Values.model.nimCache | quote }}
              - name: NGC_HOME
                value: {{ .Values.model.nimCache }}/ngc/hub
              - name: HF_HOME
              value: {{ .Values.model.nimCache }}/huggingface/hub
              - name: NUMBA_CACHE_DIR
              value: /tmp/numba
              - name: OUTLINES_CACHE_DIR
                value: /tmp/outlines
              - name: NGC_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.model.ngcAPISecret }}
                    key: NGC_API_KEY
              - name: NIM_SERVER_PORT
                value: {{ .Values.model.openaiPort | quote }}
              - name: NIM_JSONL_LOGGING
                value: {{ ternary "1" "0" .Values.model.jsonLogging | quote }}
              - name: NIM_LOG_LEVEL
                value: {{ .Values.model.logLevel | quote }}
              - name: NIM_NUM_COMPUTE_NODES
                value: {{ $.Values.multiNode.workers | quote }}
              - name: CLUSTER_START_TIMEOUT
                value: {{ .Values.multiNode.clusterStartTimeout | quote }}
              {{- if .Values.env }}
              {{- toYaml .Values.env | nindent 14 }}
              {{- end }}
              - name: CLUSTER_SIZE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.annotations['leaderworkerset.sigs.k8s.io/size']
              - name: GROUP_INDEX
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.labels['leaderworkerset.sigs.k8s.io/group-index']
            command:
              - bash
              - -c
              - |-
                ssh-keygen -f \
                /opt/nim/llm/pk/private.key \
                -y > /opt/nim/llm/.ssh/rsa.pub \
                && cp /opt/nim/llm/.ssh/rsa.pub {{ include "nim-llm.sshDir" . }}/authorized_keys \
                && echo -e "Host *\n    IdentityFile /opt/nim/llm/pk/private.key" \
                > /opt/nim/llm/.ssh/config;
                ticker=0;
                grep -v '^localhost' "/etc/mpi/hostfile-${GROUP_INDEX}" | awk '{print $1}' | while read -r worker;
                do
                  echo "waiting for $worker to be reachable";
                  until (exec 3<>/dev/tcp/"${worker}"/2222) 2>/dev/null;
                  do
                    sleep 2;
                    ticker=$((ticker+2));
                    if (( $ticker > $CLUSTER_START_TIMEOUT )); then
                      echo "failure: cluster start timeout exceeded";
                      exit 1;
                    fi;
                  done;
                  echo "$worker ready";
                done;
                mpirun \
                -n 1 \
                -bind-to none \
                --hostfile /etc/mpi/hostfile-${GROUP_INDEX} \
                -map-by slot \
                -x \
                NIM_CACHE_PATH \
                -x \
                NGC_API_KEY \
                -x \
                NIM_SERVER_PORT \
                -x \
                VLLM_CONFIGURE_LOGGING \
                -x \
                TLLM_LOG_LEVEL \
                -x \
                VLLM_NVEXT_LOG_LEVEL \
                -x \
                UVICORN_LOG_LEVEL \
                -x \
                NIM_JSONL_LOGGING \
                -x \
                VLLM_LOGGING_CONFIG_PATH \
                -x \
                VLLM_NVEXT_LOGGING_CONFIG_PATH \
                -x \
                NIM_NUM_COMPUTE_NODES \
                -x \
                HF_HOME \
                -x \
                NGC_HOME \
                -x \
                NUMBA_CACHE_DIR \
                -x \
                OUTLINES_CACHE_DIR \
                {{- range $.Values.env }}
                -x \
                {{ get . "name" }} \
                {{- end }}
                /opt/nim/start-mpi-cluster.sh
            { { - with .Resources } }
            resources:
              { { . | yaml | nindent 14 } }
            { { - end } }
            volumeMounts:
              - name: ssh-pk
                mountPath: /opt/nim/llm/pk
              - name: ssh-dotfiles
                mountPath: /opt/nim/llm/.ssh
              - name: mpi-config
                mountPath: /etc/mpi
              - name: start-mpi-script
                mountPath: /opt/nim/start-mpi-cluster.sh
                subPath: start-mpi-cluster.sh
        { { - if .ImagePullSecrets } }
        imagePullSecrets:
        { { - range .ImagePullSecrets } }
        - name: { { . } }
        { { - end } }
        { { - end } }
        volumes:
          - name: mpi-config
            configMap:
              name: {{ .Name }}-lws-mpi-config
              defaultMode: 0444
          - name: start-mpi-script
            configMap:
              name: {{ .Name }}-mpi-start-script
              defaultMode: 0555
          - name: ssh-dotfiles
            emptyDir: {}
          - name: ssh-pk
            secret:
              defaultMode: 256
              secretName: {{ .Name }}-ssh-pk
    workerTemplate:
      metadata:
        labels:
          { { - if .Labels } }
          { { - .Labels | yaml | nindent 10 } }
          { { - end } }
        annotations:
          { { - if .Annotations } }
            { { - .Annotations | yaml | nindent 10 } }
            { { - end } }
      spec:
        containers:
          - name: nim-worker
            image: {{ .Image }}
            command:
              - bash
              - -c
              - |-
                ssh-keygen -f \
                /opt/nim/llm/pk/private.key \
                -y > /opt/nim/llm/.ssh/rsa.pub \
                && cp /opt/nim/llm/.ssh/rsa.pub /opt/nim/llm/.ssh/authorized_keys \
                && echo -e "Host *\n    IdentityFile /opt/nim/llm/pk/private.key" \
                && cp /etc/ssh/sshd_config /ssh-confs/.sshd_config && \
                /usr/bin/ssh-keygen -f /ssh-confs/hostkey.rsa -N '' -t rsa && \
                /usr/sbin/sshd -De -f /ssh-confs/.sshd_config -h /ssh-confs/hostkey.rsa
            { { - with .Resources } }
            resources:
              { { . | yaml | nindent 14 } }
            { { - end } }
            volumeMounts:
              - name: ssh-confs
                mountPath: /ssh-confs
              - name: ssh-dotfiles
                mountPath: /opt/nim/llm/.ssh
              - name: ssh-pk
                mountPath: /opt/nim/llm/pk
              - name: start-mpi-script
                mountPath: /opt/nim/start-mpi-cluster.sh
                subPath: start-mpi-cluster.sh
            env:
              - name: VLLM_CONFIGURE_LOGGING
                value: "1"
              - name: TLLM_LOG_LEVEL
                value: {{ include "nim-llm.trtLLMLoggingLevel" . }}
              - name: VLLM_NVEXT_LOG_LEVEL
                value: {{ include "nim-llm.vllmNVEXTLogLevel" . }}
              - name: UVICORN_LOG_LEVEL
                value: {{ include "nim-llm.uvicornLogLevel" . }}
              {{- include "nim-llm.JSONLLoggingEnvVars" . | indent 14 }}
              - name: NIM_CACHE_PATH
                value: {{ .Values.model.nimCache | quote }}
              - name: NGC_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.model.ngcAPISecret }}
                    key: NGC_API_KEY
              - name: NIM_SERVER_PORT
                value: {{ .Values.model.openaiPort | quote }}
              - name: NIM_JSONL_LOGGING
                value: {{ ternary "1" "0" .Values.model.jsonLogging | quote }}
              - name: NIM_LOG_LEVEL
                value: {{ .Values.model.logLevel | quote }}
              - name: NIM_NUM_COMPUTE_NODES
                value: {{ .Values.multiNode.workers | quote }}
              {{- if .Values.env }}
              {{- toYaml .Values.env | nindent 14 }}
              {{- end }}
              {{/* TODO: change below */}}
              - name: LEADER_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.annotations['leaderworkerset.sigs.k8s.io/leader-name']
              - name: NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: LWS_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.labels['leaderworkerset.sigs.k8s.io/name']
        { { - if .ImagePullSecrets } }
        imagePullSecrets:
        { { - range .ImagePullSecrets } }
        - name: { { . } }
        { { - end } }
        { { - end } }
        volumes:
          - name: ssh-confs
            emptyDir: {}
          - name: ssh-dotfiles
            emptyDir: {}
          - name: ssh-pk
            secret:
              defaultMode: 256
              secretName: {{ .Name }}-ssh-pk
          - name: start-mpi-script
            configMap:
              name:  {{ .Name }}-mpi-start-script
              defaultMode: 0555